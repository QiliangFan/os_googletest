# Generated by Selenium IDE
import pytest
import time
import json
import random
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestGoogle():
  def __init__(self):
    self.times = 0

  def setup_method(self, method=None):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method=None):
    self.driver.quit()

  def make_order(self):
    #  | click | css=.col-md-4:nth-child(4) .card-hover |
    # total number: 9
    n = random.randint(1, 9)
    self.driver.find_element(By.CSS_SELECTOR, ".col-md-4:nth-child({}) .card-hover".format(n)).click()
    #  | click | id=quantity |
    self.driver.find_element(By.ID, "quantity").click()
    #  | select | id=quantity | label=3
    # label: 1, 2, 3, 4, 5, 10
    dropdown = self.driver.find_element(By.ID, "quantity")
    dropdown.find_element(By.XPATH, "//option[. = '3']").click()
    #  | click | css=#quantity > option:nth-child(3) |
    n = random.randint(1, 6)
    self.driver.find_element(By.CSS_SELECTOR, "#quantity > option:nth-child({})".format(n)).click()
    #  | click | css=.btn |
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()

    # continue or emtpy chop car

    n = random.randint(1, 3)
    if n == 1 and self.times < 5:
      self.driver.find_element(By.CSS_SELECTOR, ".btn-secondary").click()  # empty the shop car
      self.times += 1
      self.make_order()
    elif n == 2 and self.times < 5:
      self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(2)").click()  # continue
      self.times += 1
      self.make_order()
    else:
      #  | click | css=.btn-info:nth-child(1) |
      self.driver.find_element(By.CSS_SELECTOR, ".btn-info:nth-child(1)").click()  # pay order

      #  | click | css=.btn |
      self.driver.find_element(By.CSS_SELECTOR, ".btn").click()  # keep watching

    if self.times < 5:
      self.times += 1
      self.make_order()

  def test_google_random_pick(self):
    # Test name: google
    # Step # | name | target | value
    #  | open | http://localhost:8080/ |
    self.driver.get("http://localhost:8080/")
    #  | setWindowSize | 1918x823 |
    self.driver.set_window_size(1918, 823)

    self.make_order(1)




  
